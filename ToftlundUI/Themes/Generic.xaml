<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ToftlundUI">

    <!--#region Statusbar -->
    <Style TargetType="{x:Type local:StatusBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:StatusBar}">
                    <Grid>
                        <TextBlock x:Name="StatusTextBund" 
                                   Foreground="{TemplateBinding TextColorOnStatusBarBackground}" 
                                   Background="Transparent"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Center"
                                   TextAlignment="Center"
                                   Text="{TemplateBinding TextOnStatusBar}" 
                                   />

                        <ProgressBar x:Name="StatusProgressBar"
                                     Height="32"
                                     Value="{TemplateBinding Value}" 
                                     Minimum="{TemplateBinding Minimum}" 
                                     Maximum="{TemplateBinding Maximum}" 
                                     Background="{TemplateBinding Background}" 
                                     Foreground="{TemplateBinding Foreground}"
                                     />

                        <TextBlock x:Name="StatusText" 
                                   Foreground="{TemplateBinding TextColorOnStatusBar}" 
                                   Background="Transparent"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Center"
                                   TextAlignment="Center"
                                   Text="{TemplateBinding TextOnStatusBar}"
                                   >
                            <TextBlock.Clip>
                                <RectangleGeometry x:Name="Blockbox" Rect="0 0 0 50"/>
                            </TextBlock.Clip>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region IPv4Address-->
    <Style TargetType="{x:Type local:IPv4Address}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:IPv4Address">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" Grid.Column="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" x:Name="IPv4AddressBorder">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"  >
                                <TextBox x:Name="Segment1" BorderThickness="0" Background="{TemplateBinding Background}" VerticalAlignment="Center" Text="" MaxLength="3" />
                                <TextBox VerticalAlignment="Center" Text="." BorderThickness="0" Background="{TemplateBinding Background}" Focusable="False" />
                                <TextBox x:Name="Segment2" BorderThickness="0" Background="{TemplateBinding Background}" VerticalAlignment="Center" Text="" MaxLength="3"/>
                                <TextBox VerticalAlignment="Center" Text="." BorderThickness="0" Background="{TemplateBinding Background}" Focusable="False"/>
                                <TextBox x:Name="Segment3" BorderThickness="0" Background="{TemplateBinding Background}" VerticalAlignment="Center" Text="" MaxLength="3"/>
                                <TextBox VerticalAlignment="Center" Text="." BorderThickness="0" Background="{TemplateBinding Background}" Focusable="False"/>
                                <TextBox x:Name="Segment4" BorderThickness="0" Background="{TemplateBinding Background}" VerticalAlignment="Center" Text="" MaxLength="3"/>
                            </StackPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->







    

    <Style TargetType="{x:Type local:WindowControls}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:WindowControls">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>


                        <Label Grid.Column="0" Name="Title" Content="{TemplateBinding Title}" Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                        <Label Grid.Column="1" Name="EmptySpace" Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                        <!--<Label Grid.Column="2" Content="Connection"/>-->

                        <ContentControl Name="ConnectionIcon" Grid.Column="2"  Width="46" Height="32">
                            <!--Content="{Binding Source={StaticResource Cloud-off}}"-->
                            <ContentControl.Content>
                                <Grid>
                                    <Path Name="CloudOff" Visibility="Collapsed" Width="20" Height="20" Stretch="Uniform" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Fill="#000000" Data="M19.8 22.6 17.15 20H6.5q-2.3 0-3.9-1.6T1 14.5q0-1.925 1.188-3.425 1.187-1.5 3.062-1.925.075-.2.15-.388.075-.187.15-.412L1.4 4.2l1.4-1.4 18.4 18.4ZM6.5 18h8.65L7.1 9.95q-.05.275-.075.525Q7 10.725 7 11h-.5q-1.45 0-2.475 1.025Q3 13.05 3 14.5q0 1.45 1.025 2.475Q5.05 18 6.5 18Zm4.625-4.025ZM21.6 18.75l-1.45-1.4q.425-.35.638-.812Q21 16.075 21 15.5q0-1.05-.725-1.775Q19.55 13 18.5 13H17v-2q0-2.075-1.462-3.538Q14.075 6 12 6q-.675 0-1.3.162-.625.163-1.2.513l-1.45-1.45q.875-.6 1.863-.913Q10.9 4 12 4q2.925 0 4.962 2.037Q19 8.075 19 11q1.725.2 2.863 1.487Q23 13.775 23 15.5q0 .975-.375 1.812-.375.838-1.025 1.438Zm-6.775-6.725Z"/>
                                    <Path Name="CloudOn" Visibility="Collapsed" Width="20" Height="20" Stretch="Uniform" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Fill="#000000" Data="M6.5 20q-2.275 0-3.887-1.575Q1 16.85 1 14.575q0-1.95 1.175-3.475Q3.35 9.575 5.25 9.15q.625-2.3 2.5-3.725Q9.625 4 12 4q2.925 0 4.962 2.037Q19 8.075 19 11q1.725.2 2.863 1.487Q23 13.775 23 15.5q0 1.875-1.312 3.188Q20.375 20 18.5 20Zm0-2h12q1.05 0 1.775-.725Q21 16.55 21 15.5q0-1.05-.725-1.775Q19.55 13 18.5 13H17v-2q0-2.075-1.462-3.538Q14.075 6 12 6 9.925 6 8.463 7.462 7 8.925 7 11h-.5q-1.45 0-2.475 1.025Q3 13.05 3 14.5q0 1.45 1.025 2.475Q5.05 18 6.5 18Zm5.5-6Z"/>
                                    <Path Name="NoNet" Visibility="Collapsed" Width="20" Height="20" Stretch="Uniform" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  Fill="#000000" Data="m33.65 29.4-1.75-1.75q1.45-1.6 2.225-3.55.775-1.95.775-4.1 0-2.2-.825-4.175-.825-1.975-2.325-3.575l1.75-1.75q1.9 1.9 2.9 4.35 1 2.45 1 5.15 0 2.65-1 5.05t-2.75 4.35Zm-6.3-6.3-6.45-6.45q.6-.6 1.425-.9.825-.3 1.675-.3 1.9 0 3.225 1.325Q28.55 18.1 28.55 20q0 .85-.3 1.65-.3.8-.9 1.45ZM38.25 34l-1.75-1.75q2.35-2.55 3.675-5.675Q41.5 23.45 41.5 20q0-3.5-1.35-6.675t-3.8-5.675L38.1 5.9q2.85 2.85 4.375 6.475Q44 16 44 20q0 3.95-1.525 7.55-1.525 3.6-4.225 6.45Zm2.4 10.95L25.5 29.8V42h-3V26.8l-9.1-9.1q-.2.55-.25 1.125-.05.575-.05 1.175 0 2.2.8 4.2t2.35 3.55L14.5 29.5q-1.9-1.9-2.9-4.35-1-2.45-1-5.15 0-1.15.175-2.225.175-1.075.575-2.125l-3.1-3.1q-.85 1.75-1.3 3.625Q6.5 18.05 6.5 20q0 3.5 1.325 6.675t3.825 5.675L9.9 34.1q-2.85-2.8-4.375-6.45Q4 24 4 20q0-2.45.6-4.8.6-2.35 1.75-4.55l-3.3-3.3L5.2 5.2l37.6 37.6Z"/>
                                </Grid>
                            </ContentControl.Content>
                        </ContentControl>
                       
                        <Button Name="PinWindow" Grid.Column="3" Width="46" Height="32">
                            <Button.Content>
                                <Grid>
                                    <Path Name="PinOff" Visibility="Visible" Width="20" Height="20" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Fill="#000000" Stretch="Uniform" Data="m 387.165 615.61176 5.43906 111.93926 -41.28372 41.28371 L 207.88797 625.40236 41.28372 792.00662 7.1e-4 791.2988 0 750.7229 166.60425 584.11864 22.46478 439.97917 63.74849 398.69545 172.53264 400.9794 402.07012 171.44192 367.91191 137.28371 409.19563 96 692.14511 378.94948 650.8614 420.2332 616.70248 386.07428 Z M 120.58786 455.53482 332.61029 667.55725 330.94364 589.26709 575.41947 344.79127 443.35384 212.72564 198.53225 457.54723 Z m 106.01086 106.01086 z" />
                                    <Path Name="PinOn" Visibility="Collapsed" Width="20" Height="20" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  Fill="#000000" Stretch="Uniform" Data="m 382.073 478.999 82.999 75.307 V 612.69 H 262.228 v 235.614 l -29.692 28.691 -28.692 -28.691 V 612.69 H 0 V 554.306 L 78.537 478.999 V 154.384 H 30.23 V 96 h 400.151 v 58.384 H 382.073 Z M 80.383 554.306 H 380.228 L 323.69 500.125 V 154.384 H 136.921 v 346.23 z m 149.922 0 z"/>
                                </Grid>
                            </Button.Content>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>

                                        <Trigger Property="IsMouseOver" Value="True" >
                                            <Setter Property="Background" Value="{Binding Path=OnMouseOverBackground, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>

                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>


                        <Button Name="MinimizeButton" Grid.Column="4" Width="46" Height="32">
                            <Button.Content>
                                <Path Width="46" Height="32" Data="M 18,15 H 28" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1" />
                            </Button.Content>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        
                                        <Trigger Property="IsMouseOver" Value="True" >
                                            <Setter Property="Background" Value="{Binding Path=OnMouseOverBackground, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                                            
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Name="restoreButton" Grid.Column="5" Width="46" Height="32">
                            <Button.Content>
                                <Grid>
                                    <Path x:Name="RestoreImage" Visibility="Collapsed" Width="46" Height="32" Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z M 20.5,12.5 V 10.5 H 27.5 V 17.5 H 25.5" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"	StrokeThickness="1" />

                                    <Path x:Name="MaximizeImage" Visibility="Visible" Width="46" Height="32" Data="M 18.5,10.5 H 27.5 V 19.5 H 18.5 Z" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1" />
                                    
                                </Grid>

                            </Button.Content>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{Binding Path=OnMouseOverBackground, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Grid.Column="6" Width="46" Height="32"  Foreground="{TemplateBinding Foreground}" x:Name="CloseWindowButton" >
                            <Button.Content>
                                <Path Width="46" Height="32" Data="M 18,11 27,20 M 18,20 27,11" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1" />
                            </Button.Content>
                            
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{Binding Path=OnMouseOverCloseBackground, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>




                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
        <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Green"/>

            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="Transparent" BorderThickness="0" SnapsToDevicePixels="True">
                            <ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="red" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    

   


    <!--#region WindowControls-->
    
    
    <!--#endregion-->
    
    
    
    
</ResourceDictionary>

