<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ToftlundUI">

    <!--#region Statusbar -->
    <Style TargetType="{x:Type local:StatusBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:StatusBar}">
                    <Grid>
                        <TextBlock x:Name="StatusTextBund" 
                                   Foreground="{TemplateBinding TextColorOnStatusBarBackground}" 
                                   Background="Transparent"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Center"
                                   TextAlignment="Center"
                                   Text="{TemplateBinding TextOnStatusBar}" 
                                   />

                        <ProgressBar x:Name="StatusProgressBar"
                                     Height="32"
                                     Value="{TemplateBinding Value}" 
                                     Minimum="{TemplateBinding Minimum}" 
                                     Maximum="{TemplateBinding Maximum}" 
                                     Background="{TemplateBinding Background}" 
                                     Foreground="{TemplateBinding Foreground}"
                                     />

                        <TextBlock x:Name="StatusText" 
                                   Foreground="{TemplateBinding TextColorOnStatusBar}" 
                                   Background="Transparent"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Center"
                                   TextAlignment="Center"
                                   Text="{TemplateBinding TextOnStatusBar}"
                                   >
                            <TextBlock.Clip>
                                <RectangleGeometry x:Name="Blockbox" Rect="0 0 0 50"/>
                            </TextBlock.Clip>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region IPv4Address-->
    <Style TargetType="{x:Type local:IPv4Address}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:IPv4Address">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" Grid.Column="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" x:Name="IPv4AddressBorder">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"  >
                                <TextBox x:Name="Segment1" BorderThickness="0" Background="{TemplateBinding Background}" VerticalAlignment="Center" Text="" MaxLength="3" />
                                <TextBox VerticalAlignment="Center" Text="." BorderThickness="0" Background="{TemplateBinding Background}" Focusable="False" />
                                <TextBox x:Name="Segment2" BorderThickness="0" Background="{TemplateBinding Background}" VerticalAlignment="Center" Text="" MaxLength="3"/>
                                <TextBox VerticalAlignment="Center" Text="." BorderThickness="0" Background="{TemplateBinding Background}" Focusable="False"/>
                                <TextBox x:Name="Segment3" BorderThickness="0" Background="{TemplateBinding Background}" VerticalAlignment="Center" Text="" MaxLength="3"/>
                                <TextBox VerticalAlignment="Center" Text="." BorderThickness="0" Background="{TemplateBinding Background}" Focusable="False"/>
                                <TextBox x:Name="Segment4" BorderThickness="0" Background="{TemplateBinding Background}" VerticalAlignment="Center" Text="" MaxLength="3"/>
                            </StackPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    
    <Style TargetType="{x:Type local:WindowControls}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:WindowControls">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>


                        <Label Grid.Column="0" Content="{TemplateBinding Title}"/>

                        <Label Grid.Column="2" Content="Connection"/>
                        <Label Grid.Column="3" Content="Window on top"/>
                        <!--<Label Grid.Column="4" Content="Minimer"/>-->


                        <Button Grid.Column="4" Width="46" Height="32">
                            <Button.Content>
                                <Path Width="46" Height="32" Data="M 18,15 H 28" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1" />
                            </Button.Content>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        
                                        <Trigger Property="IsMouseOver" Value="True" >
                                            <Setter Property="Background" Value="{Binding Path=OnMouseOverBackground, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                                            
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Name="restoreButton" Grid.Column="5" Width="46" Height="32">
                            <Button.Content>
                                <Grid>
                                    <Path x:Name="RestoreImage" Visibility="Visible" Width="46" Height="32" Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z M 20.5,12.5 V 10.5 H 27.5 V 17.5 H 25.5" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"	StrokeThickness="1" />

                                    <Path x:Name="MaximiseImage" Visibility="Collapsed" Width="46" Height="32" Data="M 18.5,10.5 H 27.5 V 19.5 H 18.5 Z" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1" />
                                    
                                </Grid>

                            </Button.Content>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{Binding Path=OnMouseOverBackground, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Grid.Column="6" Width="46" Height="32"  Foreground="{TemplateBinding Foreground}" x:Name="CloseWindowButton" >
                            <Button.Content>
                                <Path Width="46" Height="32" Data="M 18,11 27,20 M 18,20 27,11" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1" />
                            </Button.Content>
                            
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{Binding Path=OnMouseOverCloseBackground, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>




                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
        <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Green"/>

            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="Transparent" BorderThickness="0" SnapsToDevicePixels="True">
                            <ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="red" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    

   


    <!--#region WindowControls-->
    
    
    <!--#endregion-->
    
    
    
    
</ResourceDictionary>

