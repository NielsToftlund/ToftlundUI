<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ToftlundUI">

    <!--#region Statusbar -->
    <Style TargetType="{x:Type local:StatusBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:StatusBar}">
                    <Grid>
                        <TextBlock x:Name="StatusTextBund" 
                                   Foreground="{TemplateBinding TextColorOnStatusBarBackground}" 
                                   Background="Transparent"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Center"
                                   TextAlignment="Center"
                                   Text="{TemplateBinding TextOnStatusBar}" 
                                   />

                        <ProgressBar x:Name="StatusProgressBar"
                                     Height="32"
                                     Value="{TemplateBinding Value}" 
                                     Minimum="{TemplateBinding Minimum}" 
                                     Maximum="{TemplateBinding Maximum}" 
                                     Background="{TemplateBinding Background}" 
                                     Foreground="{TemplateBinding Foreground}"
                                     />

                        <TextBlock x:Name="StatusText" 
                                   Foreground="{TemplateBinding TextColorOnStatusBar}" 
                                   Background="Transparent"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Center"
                                   TextAlignment="Center"
                                   Text="{TemplateBinding TextOnStatusBar}"
                                   >
                            <TextBlock.Clip>
                                <RectangleGeometry x:Name="Blockbox" Rect="0 0 0 50"/>
                            </TextBlock.Clip>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region IPv4Address-->
    <Style TargetType="{x:Type local:IPv4Address}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:IPv4Address">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" Grid.Column="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" x:Name="IPv4AddressBorder">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"  >
                                <TextBox x:Name="Segment1" BorderThickness="0" Background="{TemplateBinding Background}" VerticalAlignment="Center" Text="" MaxLength="3" />
                                <TextBox x:Name="Dot1" VerticalAlignment="Center" Text="." BorderThickness="0" Background="{TemplateBinding Background}" Focusable="False" />
                                <TextBox x:Name="Segment2" BorderThickness="0" Background="{TemplateBinding Background}" VerticalAlignment="Center" Text="" MaxLength="3"/>
                                <TextBox x:Name="Dot2" VerticalAlignment="Center" Text="." BorderThickness="0" Background="{TemplateBinding Background}" Focusable="False"/>
                                <TextBox x:Name="Segment3" BorderThickness="0" Background="{TemplateBinding Background}" VerticalAlignment="Center" Text="" MaxLength="3"/>
                                <TextBox x:Name="Dot3" VerticalAlignment="Center" Text="." BorderThickness="0" Background="{TemplateBinding Background}" Focusable="False"/>
                                <TextBox x:Name="Segment4" BorderThickness="0" Background="{TemplateBinding Background}" VerticalAlignment="Center" Text="" MaxLength="3"/>
                            </StackPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region WindowControls-->
    <Style TargetType="{x:Type local:WindowControls}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:WindowControls">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/> <!-- Window icon -->
                            <ColumnDefinition Width="auto"/> <!-- Text on controlbar-->
                            <ColumnDefinition Width="*"/>    <!-- space to fill between text and buttons -->
                            <ColumnDefinition Width="auto"/> <!-- Connection icon-->
                            <ColumnDefinition Width="auto"/> <!-- Pin window button -->
                            <ColumnDefinition Width="auto"/> <!-- minimize button -->
                            <ColumnDefinition Width="auto"/> <!-- Restore button -->
                            <ColumnDefinition Width="auto"/> <!-- Close button -->
                        </Grid.ColumnDefinitions>

                        <Image Grid.Column="0" Name="TitleImage" Height="20" Margin="5,0,0,0" Source="{Binding Icon, RelativeSource={RelativeSource AncestorType={x:Type Control}}}"   />

                        <Label Grid.Column="1" Name="Title" Content="{TemplateBinding Title}" Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Control}} }" Foreground="{TemplateBinding Foreground}" />
                        <Label Grid.Column="2" Name="EmptySpace" Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>

                        <ContentControl Name="ConnectionIcon" Grid.Column="3"  Width="46" Height="32">
                            <!--Content="{Binding Source={StaticResource Cloud-off}}"-->
                            <ContentControl.Content>
                                <Grid>
                                    <Path Name="CloudOff" Visibility="Collapsed" Width="20" Height="20" Stretch="Uniform" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Fill="{TemplateBinding Foreground}" Data="M480 976q-83 0-156-31.5T197 859q-54-54-85.5-127T80 576q0-83 31.5-156T197 293q54-54 127-85.5T480 176q83 0 156 31.5T763 293q54 54 85.5 127T880 576q0 83-31.5 156T763 859q-54 54-127 85.5T480 976Zm-43-61v-82q-35 0-59-26t-24-61v-44L149 497q-5 20-7 39.5t-2 39.5q0 130 84.5 227T437 915Zm294-108q22-24 38.5-51t28-56.5q11.5-29.5 17-60.5t5.5-63q0-106-58-192.5T607 257v18q0 35-24 61t-59 26h-87v87q0 17-13.5 28T393 488h-83v88h258q17 0 28 13t11 30v127h43q29 0 51 17t30 44Z"/>
                                    <Path Name="CloudOn" Visibility="Collapsed" Width="20" Height="20" Stretch="Uniform" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Fill="{TemplateBinding Foreground}" Data="M481-80q-84 0-157-31t-127.5-85Q142-250 111-323T80-480q0-84 31-157t84.5-127q53.5-54 125-85T473-880q45 0 91 8.5t70 19.5v72q0 34-26.5 60.5T547-693H433v80q0 19-13.5 32.5T387-567h-80v87h253q20 0 33.5 13.5T607-433v127h40q29 0 51.5 16t30.5 42q45-51 68-109.5T820-476q0-15-1-36.5t-3-34.5h60q2 10 3 29t1 37q0 84-31 157.5T764-196q-54 54-126.5 85T481-80Zm-48-55v-91q-33 0-56.5-23.5T353-306v-40L147-552q-4 23-5.5 37.5T140-483q0 134 83 232t210 116Zm291-472q-13 0-21.5-8.5T694-637v-146q0-13 8.5-21.5T724-813h16v-40q0-33 22.5-57t54.5-24q32 0 54.5 24t22.5 57v40h17q13 0 21.5 8.5T941-783v146q0 13-8.5 21.5T911-607H724Zm50-206h86v-40q0-19-12-33t-31-14q-19 0-31 14t-12 33v40Z"/>
                                    <Path Name="NoNet" Visibility="Collapsed" Width="20" Height="20" Stretch="Uniform" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  Fill="{TemplateBinding Foreground}" Data="M833-41 717-157q-50 37-110 57T480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-67 20-127t57-110L26-848l43-43L876-84l-43 43ZM437-141v-82q-35 0-59-26t-24-61v-44L149-559q-5 20-7 39.5t-2 39.5q0 130 84.5 227T437-141Zm366-102-43-43q29-43 44.5-92.5T820-480q0-106-58-192.5T607-799v18q0 35-24 61t-59 26h-87v85L243-803q50-37 110-57t127-20q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 67-20 127t-57 110Z"/>
                                </Grid>
                            </ContentControl.Content>
                        </ContentControl>
                       
                        <Button Name="PinWindow" Grid.Column="4" Width="46" Height="32">
                            <Button.Content>
                                <Grid>
                                    <Path Name="PinOff" Visibility="Visible" Width="20" Height="20" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Fill="{TemplateBinding Foreground}" Stretch="Uniform" Data="m 387.165 615.61176 5.43906 111.93926 -41.28372 41.28371 L 207.88797 625.40236 41.28372 792.00662 7.1e-4 791.2988 0 750.7229 166.60425 584.11864 22.46478 439.97917 63.74849 398.69545 172.53264 400.9794 402.07012 171.44192 367.91191 137.28371 409.19563 96 692.14511 378.94948 650.8614 420.2332 616.70248 386.07428 Z M 120.58786 455.53482 332.61029 667.55725 330.94364 589.26709 575.41947 344.79127 443.35384 212.72564 198.53225 457.54723 Z m 106.01086 106.01086 z" />
                                    <Path Name="PinOn" Visibility="Collapsed" Width="20" Height="20" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  Fill="{TemplateBinding Foreground}" Stretch="Uniform" Data="m 382.073 478.999 82.999 75.307 V 612.69 H 262.228 v 235.614 l -29.692 28.691 -28.692 -28.691 V 612.69 H 0 V 554.306 L 78.537 478.999 V 154.384 H 30.23 V 96 h 400.151 v 58.384 H 382.073 Z M 80.383 554.306 H 380.228 L 323.69 500.125 V 154.384 H 136.921 v 346.23 z m 149.922 0 z"/>
                                </Grid>
                            </Button.Content>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>

                                        <Trigger Property="IsMouseOver" Value="True" >
                                            <Setter Property="Background" Value="{Binding Path=OnMouseOverBackground, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>

                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>


                        <Button Name="MinimizeButton" Grid.Column="5" Width="46" Height="32" Foreground="{TemplateBinding Foreground}">
                            <Button.Content>
                                <Path x:Name="PathMinimizeButton" Width="46" Height="32" Data="M 18,15 H 28" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1" />
                            </Button.Content>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    
                                    <Style.Triggers>
                                        
                                        <Trigger Property="IsMouseOver" Value="True" >
                                            <Setter Property="Background" Value="{Binding Path=OnMouseOverBackground, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>

                                            <Setter Property="Foreground" Value="{Binding Path=OnMouseOverForeground, RelativeSource={RelativeSource AncestorType={x:Type Path}} }"/>
                                            <!--<Setter TargetName="PathMinimizeButton"  Property="Stroke" Value="{Binding Path=OnMouseOverForeground, RelativeSource={RelativeSource AncestorType={x:Type Path}} }"/>
                                            <Setter TargetName="restoreButton" Property="Fill" Value="Red" />-->
                                            
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Name="restoreButton" Grid.Column="6" Width="46" Height="32" Foreground="{TemplateBinding Foreground}">
                            <Button.Content>
                                <Grid>
                                    <Path x:Name="RestoreImage" Visibility="Collapsed" Width="46" Height="32" Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z M 20.5,12.5 V 10.5 H 27.5 V 17.5 H 25.5" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"	StrokeThickness="1" />

                                    <Path x:Name="MaximizeImage" Visibility="Visible" Width="46" Height="32" Data="M 18.5,10.5 H 27.5 V 19.5 H 18.5 Z" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1" />
                                    <!--<Path x:Name="MaximizeImage" Visibility="Visible" Stretch="UniformToFill" Width="46" Height="32"  Fill="Black" Data="M119-770v-60h721v60H119Z" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1" />-->
                                    
                                </Grid>

                            </Button.Content>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{Binding Path=OnMouseOverBackground, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Grid.Column="7" Width="46" Height="32"  Foreground="{TemplateBinding Foreground}" x:Name="CloseWindowButton" >
                            <Button.Content>
                                <Path Width="46" Height="32" Data="M 18,11 27,20 M 18,20 27,11" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1" />
                            </Button.Content>
                            
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{Binding Path=OnMouseOverCloseBackground, RelativeSource={RelativeSource AncestorType={x:Type Control}} }"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>




                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
        <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Green"/>

            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="Transparent" BorderThickness="0" SnapsToDevicePixels="True">
                            <ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="red" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    

   



    
    
    <!--#endregion-->
    
    
    
    
</ResourceDictionary>

